# Generated by Django 5.2 on 2025-08-23 08:09

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceDiscrepancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discrepancy_type', models.CharField(choices=[('NO_SHOW', 'No-Show'), ('UNEXPECTED', 'Unexpected'), ('NEVER_NOTIFIED', 'Never Notified')], max_length=20)),
                ('parent_response', models.CharField(max_length=20)),
                ('coach_marked_attendance', models.CharField(max_length=10)),
                ('admin_acknowledged', models.BooleanField(default=False)),
                ('recorded_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='BackwallDriveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('shot_type', models.CharField(choices=[('FH', 'Forehand'), ('BH', 'Backhand')], max_length=2)),
                ('consecutive_count', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['-date_recorded', 'shot_type'],
            },
        ),
        migrations.CreateModel(
            name='CourtSprintRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('duration_choice', models.CharField(choices=[('3m', '3 Minutes'), ('5m', '5 Minutes'), ('10m', '10 Minutes')], max_length=3)),
                ('score', models.PositiveIntegerField(help_text='Number of full court lengths completed.')),
            ],
            options={
                'ordering': ['-date_recorded', 'duration_choice'],
            },
        ),
        migrations.CreateModel(
            name='MatchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('opponent_name', models.CharField(blank=True, max_length=100, null=True)),
                ('player_score_str', models.CharField(help_text="Player's score, e.g., '3-1' or '11-9, 11-5, 11-7'", max_length=50)),
                ('opponent_score_str', models.CharField(blank=True, help_text="Opponent's score if different from player's perspective", max_length=50, null=True)),
                ('is_competitive', models.BooleanField(default=False, help_text='Was this an official league/tournament match?')),
                ('match_notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('submitted_by_name', models.CharField(blank=True, help_text='Name of the person who submitted the score from the app.', max_length=100)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date', 'player__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('grade', models.IntegerField(blank=True, choices=[(0, 'Grade R'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5'), (6, 'Grade 6'), (7, 'Grade 7'), (8, 'Grade 8'), (9, 'Grade 9'), (10, 'Grade 10'), (11, 'Grade 11'), (12, 'Grade 12 (Matric)'), (99, 'Other / Not Applicable')], null=True, verbose_name='School Grade')),
                ('contact_number', models.CharField(blank=True, help_text='Enter number including country code if outside SA (e.g., +44... or 082...)', max_length=20, verbose_name='Player Contact Number')),
                ('parent_contact_number', models.CharField(blank=True, help_text='Enter number including country code if outside SA (e.g., +44... or 082...)', max_length=20, verbose_name='Parent Contact Number')),
                ('parent_email', models.EmailField(blank=True, help_text='The primary email for parent communication.', max_length=254, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='player_photos/')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('attendance_form_url', models.URLField(blank=True, help_text='Link to the external Google Form or attendance sheet for this group.', max_length=1024, null=True, verbose_name='Attendance Form URL')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VolleyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('shot_type', models.CharField(choices=[('FH', 'Forehand'), ('BH', 'Backhand')], max_length=2)),
                ('consecutive_count', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['-date_recorded', 'shot_type'],
            },
        ),
    ]
