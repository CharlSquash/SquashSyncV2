# Generated by Django 5.2 on 2025-10-27 05:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('awards', '0002_alter_prizewinner_options_alter_vote_options_and_more'),
        ('players', '0005_alter_schoolgroup_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='prize',
            options={'ordering': ['year', 'category__name', 'name']},
        ),
        migrations.AlterModelOptions(
            name='vote',
            options={'ordering': ['-voted_at']},
        ),
        migrations.AlterUniqueTogether(
            name='prizewinner',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='prize',
            name='voting_end_date',
        ),
        migrations.RemoveField(
            model_name='prize',
            name='voting_start_date',
        ),
        migrations.AddField(
            model_name='prize',
            name='voting_closes',
            field=models.DateTimeField(blank=True, help_text='When voting ends.', null=True),
        ),
        migrations.AddField(
            model_name='prize',
            name='voting_opens',
            field=models.DateTimeField(blank=True, help_text='When voting becomes available.', null=True),
        ),
        migrations.AlterField(
            model_name='prize',
            name='max_grade',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum grade (e.g., 12) to be eligible.', null=True),
        ),
        migrations.AlterField(
            model_name='prize',
            name='min_grade',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum grade (e.g., 8) to be eligible.', null=True),
        ),
        migrations.AlterField(
            model_name='prize',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('VOTING', 'Voting Open'), ('DECIDED', 'Winner Decided'), ('ARCHIVED', 'Archived')], db_index=True, default='PENDING', max_length=10),
        ),
        migrations.AlterField(
            model_name='prize',
            name='winner',
            field=models.OneToOneField(blank=True, help_text='The confirmed winner for this prize.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_prize', to='awards.prizewinner'),
        ),
        migrations.AlterField(
            model_name='prize',
            name='year',
            field=models.PositiveIntegerField(default=2025),
        ),
        migrations.AlterField(
            model_name='prizewinner',
            name='awarded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='awarded_prizes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='prizewinner',
            name='final_score',
            field=models.PositiveIntegerField(blank=True, help_text='The vote score the player had when confirmed.', null=True),
        ),
        migrations.AlterField(
            model_name='prizewinner',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_prizes', to='players.player'),
        ),
        migrations.AlterField(
            model_name='prizewinner',
            name='prize',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prize_winner_details', to='awards.prize'),
        ),
        migrations.AlterField(
            model_name='prizewinner',
            name='year',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='vote',
            name='prize',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prize_votes', to='awards.prize'),
        ),
        migrations.AlterUniqueTogether(
            name='prizewinner',
            unique_together={('prize',)},
        ),
    ]
